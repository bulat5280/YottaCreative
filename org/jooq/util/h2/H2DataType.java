package org.jooq.util.h2;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.UUID;
import org.jooq.DataType;
import org.jooq.Record;
import org.jooq.Result;
import org.jooq.SQLDialect;
import org.jooq.impl.DefaultDataType;
import org.jooq.impl.SQLDataType;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;
import org.jooq.types.UShort;

public class H2DataType {
   public static final DataType<Byte> TINYINT;
   public static final DataType<Short> SMALLINT;
   public static final DataType<Short> INT2;
   public static final DataType<Integer> INT;
   public static final DataType<Integer> INTEGER;
   public static final DataType<Integer> MEDIUMINT;
   public static final DataType<Integer> INT4;
   public static final DataType<Integer> SIGNED;
   public static final DataType<Boolean> BOOLEAN;
   public static final DataType<Boolean> BOOL;
   public static final DataType<Boolean> BIT;
   public static final DataType<Long> BIGINT;
   public static final DataType<Long> INT8;
   public static final DataType<BigDecimal> DECIMAL;
   public static final DataType<BigDecimal> DEC;
   public static final DataType<BigDecimal> NUMBER;
   public static final DataType<BigDecimal> NUMERIC;
   public static final DataType<Double> DOUBLE;
   public static final DataType<Double> FLOAT;
   public static final DataType<Double> FLOAT4;
   public static final DataType<Double> FLOAT8;
   public static final DataType<Float> REAL;
   public static final DataType<Time> TIME;
   public static final DataType<Date> DATE;
   public static final DataType<Timestamp> TIMESTAMP;
   public static final DataType<Timestamp> DATETIME;
   public static final DataType<byte[]> BINARY;
   public static final DataType<byte[]> VARBINARY;
   public static final DataType<byte[]> LONGVARBINARY;
   public static final DataType<byte[]> BLOB;
   public static final DataType<Object> OTHER;
   public static final DataType<String> VARCHAR;
   public static final DataType<String> VARCHAR2;
   public static final DataType<String> CHAR;
   public static final DataType<String> CHARACTER;
   public static final DataType<String> LONGVARCHAR;
   public static final DataType<String> CLOB;
   public static final DataType<String> NVARCHAR;
   public static final DataType<String> NVARCHAR2;
   public static final DataType<String> NCHAR;
   public static final DataType<String> NCLOB;
   protected static final DataType<String> __LONGNVARCHAR;
   protected static final DataType<Result<Record>> __RESULT;
   protected static final DataType<BigInteger> __BIGINTEGER;
   protected static final DataType<UByte> __TINYINTUNSIGNED;
   protected static final DataType<UShort> __SMALLINTUNSIGNED;
   protected static final DataType<UInteger> __INTEGERUNSIGNED;
   protected static final DataType<ULong> __BIGINTUNSIGNED;
   public static final DataType<Short> YEAR;
   public static final DataType<Long> IDENTITY;
   public static final DataType<Timestamp> SMALLDATETIME;
   public static final DataType<byte[]> RAW;
   public static final DataType<byte[]> BYTEA;
   public static final DataType<byte[]> TINYBLOB;
   public static final DataType<byte[]> MEDIUMBLOB;
   public static final DataType<byte[]> LONGBLOB;
   public static final DataType<byte[]> IMAGE;
   public static final DataType<byte[]> OID;
   public static final DataType<String> VARCHAR_CASESENSITIVE;
   public static final DataType<String> VARCHAR_IGNORECASE;
   public static final DataType<UUID> UUID;
   public static final DataType<String> TINYTEXT;
   public static final DataType<String> TEXT;
   public static final DataType<String> MEDIUMTEXT;
   public static final DataType<String> LONGTEXT;
   public static final DataType<String> NTEXT;

   static {
      TINYINT = new DefaultDataType(SQLDialect.H2, SQLDataType.TINYINT, "tinyint");
      SMALLINT = new DefaultDataType(SQLDialect.H2, SQLDataType.SMALLINT, "smallint");
      INT2 = new DefaultDataType(SQLDialect.H2, SQLDataType.SMALLINT, "int2");
      INT = new DefaultDataType(SQLDialect.H2, SQLDataType.INTEGER, "int");
      INTEGER = new DefaultDataType(SQLDialect.H2, SQLDataType.INTEGER, "integer");
      MEDIUMINT = new DefaultDataType(SQLDialect.H2, SQLDataType.INTEGER, "mediumint");
      INT4 = new DefaultDataType(SQLDialect.H2, SQLDataType.INTEGER, "int4");
      SIGNED = new DefaultDataType(SQLDialect.H2, SQLDataType.INTEGER, "signed");
      BOOLEAN = new DefaultDataType(SQLDialect.H2, SQLDataType.BOOLEAN, "boolean");
      BOOL = new DefaultDataType(SQLDialect.H2, SQLDataType.BOOLEAN, "bool");
      BIT = new DefaultDataType(SQLDialect.H2, SQLDataType.BIT, "bit");
      BIGINT = new DefaultDataType(SQLDialect.H2, SQLDataType.BIGINT, "bigint");
      INT8 = new DefaultDataType(SQLDialect.H2, SQLDataType.BIGINT, "int8");
      DECIMAL = new DefaultDataType(SQLDialect.H2, SQLDataType.DECIMAL, "decimal");
      DEC = new DefaultDataType(SQLDialect.H2, SQLDataType.DECIMAL, "dec");
      NUMBER = new DefaultDataType(SQLDialect.H2, SQLDataType.NUMERIC, "number");
      NUMERIC = new DefaultDataType(SQLDialect.H2, SQLDataType.NUMERIC, "numeric");
      DOUBLE = new DefaultDataType(SQLDialect.H2, SQLDataType.DOUBLE, "double");
      FLOAT = new DefaultDataType(SQLDialect.H2, SQLDataType.FLOAT, "float");
      FLOAT4 = new DefaultDataType(SQLDialect.H2, SQLDataType.FLOAT, "float4");
      FLOAT8 = new DefaultDataType(SQLDialect.H2, SQLDataType.FLOAT, "float8");
      REAL = new DefaultDataType(SQLDialect.H2, SQLDataType.REAL, "real");
      TIME = new DefaultDataType(SQLDialect.H2, SQLDataType.TIME, "time");
      DATE = new DefaultDataType(SQLDialect.H2, SQLDataType.DATE, "date");
      TIMESTAMP = new DefaultDataType(SQLDialect.H2, SQLDataType.TIMESTAMP, "timestamp");
      DATETIME = new DefaultDataType(SQLDialect.H2, SQLDataType.TIMESTAMP, "datetime");
      BINARY = new DefaultDataType(SQLDialect.H2, SQLDataType.BINARY, "binary");
      VARBINARY = new DefaultDataType(SQLDialect.H2, SQLDataType.VARBINARY, "varbinary");
      LONGVARBINARY = new DefaultDataType(SQLDialect.H2, SQLDataType.LONGVARBINARY, "longvarbinary");
      BLOB = new DefaultDataType(SQLDialect.H2, SQLDataType.BLOB, "blob");
      OTHER = new DefaultDataType(SQLDialect.H2, SQLDataType.OTHER, "other");
      VARCHAR = new DefaultDataType(SQLDialect.H2, SQLDataType.VARCHAR, "varchar");
      VARCHAR2 = new DefaultDataType(SQLDialect.H2, SQLDataType.VARCHAR, "varchar2");
      CHAR = new DefaultDataType(SQLDialect.H2, SQLDataType.CHAR, "char");
      CHARACTER = new DefaultDataType(SQLDialect.H2, SQLDataType.CHAR, "character");
      LONGVARCHAR = new DefaultDataType(SQLDialect.H2, SQLDataType.LONGVARCHAR, "longvarchar");
      CLOB = new DefaultDataType(SQLDialect.H2, SQLDataType.CLOB, "clob");
      NVARCHAR = new DefaultDataType(SQLDialect.H2, SQLDataType.NVARCHAR, "nvarchar");
      NVARCHAR2 = new DefaultDataType(SQLDialect.H2, SQLDataType.NVARCHAR, "nvarchar2");
      NCHAR = new DefaultDataType(SQLDialect.H2, SQLDataType.NCHAR, "nchar");
      NCLOB = new DefaultDataType(SQLDialect.H2, SQLDataType.NCLOB, "nclob");
      __LONGNVARCHAR = new DefaultDataType(SQLDialect.H2, SQLDataType.LONGNVARCHAR, "longvarchar");
      __RESULT = new DefaultDataType(SQLDialect.H2, SQLDataType.RESULT, "result_set");
      __BIGINTEGER = new DefaultDataType(SQLDialect.H2, SQLDataType.DECIMAL_INTEGER, "decimal");
      __TINYINTUNSIGNED = new DefaultDataType(SQLDialect.H2, SQLDataType.TINYINTUNSIGNED, "smallint");
      __SMALLINTUNSIGNED = new DefaultDataType(SQLDialect.H2, SQLDataType.SMALLINTUNSIGNED, "int");
      __INTEGERUNSIGNED = new DefaultDataType(SQLDialect.H2, SQLDataType.INTEGERUNSIGNED, "bigint");
      __BIGINTUNSIGNED = new DefaultDataType(SQLDialect.H2, SQLDataType.BIGINTUNSIGNED, "number");
      YEAR = new DefaultDataType(SQLDialect.H2, SQLDataType.SMALLINT, "year");
      IDENTITY = new DefaultDataType(SQLDialect.H2, SQLDataType.BIGINT, "identity");
      SMALLDATETIME = new DefaultDataType(SQLDialect.H2, SQLDataType.TIMESTAMP, "smalldatetime");
      RAW = new DefaultDataType(SQLDialect.H2, SQLDataType.BLOB, "raw");
      BYTEA = new DefaultDataType(SQLDialect.H2, SQLDataType.BLOB, "bytea");
      TINYBLOB = new DefaultDataType(SQLDialect.H2, SQLDataType.BLOB, "tinyblob");
      MEDIUMBLOB = new DefaultDataType(SQLDialect.H2, SQLDataType.BLOB, "mediumblob");
      LONGBLOB = new DefaultDataType(SQLDialect.H2, SQLDataType.BLOB, "longblob");
      IMAGE = new DefaultDataType(SQLDialect.H2, SQLDataType.BLOB, "image");
      OID = new DefaultDataType(SQLDialect.H2, SQLDataType.BLOB, "oid");
      VARCHAR_CASESENSITIVE = new DefaultDataType(SQLDialect.H2, SQLDataType.VARCHAR, "varchar_casesensitive");
      VARCHAR_IGNORECASE = new DefaultDataType(SQLDialect.H2, SQLDataType.VARCHAR, "varchar_ignorecase");
      UUID = new DefaultDataType(SQLDialect.H2, SQLDataType.UUID, "uuid");
      TINYTEXT = new DefaultDataType(SQLDialect.H2, SQLDataType.CLOB, "tinytext");
      TEXT = new DefaultDataType(SQLDialect.H2, SQLDataType.CLOB, "text");
      MEDIUMTEXT = new DefaultDataType(SQLDialect.H2, SQLDataType.CLOB, "mediumtext");
      LONGTEXT = new DefaultDataType(SQLDialect.H2, SQLDataType.CLOB, "longtext");
      NTEXT = new DefaultDataType(SQLDialect.H2, SQLDataType.NCLOB, "ntext");
   }
}
