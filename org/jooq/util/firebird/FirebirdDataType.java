package org.jooq.util.firebird;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.UUID;
import org.jooq.DataType;
import org.jooq.SQLDialect;
import org.jooq.impl.DefaultDataType;
import org.jooq.impl.SQLDataType;
import org.jooq.types.DayToSecond;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;
import org.jooq.types.UShort;
import org.jooq.types.YearToMonth;

public class FirebirdDataType {
   public static final DataType<Short> SMALLINT;
   public static final DataType<Integer> INTEGER;
   public static final DataType<Integer> INT;
   public static final DataType<Long> BIGINT;
   public static final DataType<Long> INT64;
   public static final DataType<Double> DOUBLEPRECISION;
   public static final DataType<Double> DOUBLE;
   public static final DataType<Double> D_FLOAT;
   public static final DataType<Float> FLOAT;
   public static final DataType<Boolean> BOOLEAN;
   public static final DataType<BigDecimal> DECIMAL;
   public static final DataType<BigDecimal> NUMERIC;
   public static final DataType<String> VARCHAR;
   public static final DataType<String> CHARACTERVARYING;
   public static final DataType<String> CHAR;
   public static final DataType<String> CHARACTER;
   public static final DataType<String> CLOB;
   public static final DataType<Date> DATE;
   public static final DataType<Time> TIME;
   public static final DataType<Timestamp> TIMESTAMP;
   public static final DataType<byte[]> BLOB;
   public static final DataType<Boolean> BIT;
   public static final DataType<Object> OTHER;
   public static final DataType<YearToMonth> INTERVALYEARTOMONTH;
   public static final DataType<DayToSecond> INTERVALDAYTOSECOND;
   protected static final DataType<byte[]> __BINARY;
   protected static final DataType<Double> __FLOAT;
   protected static final DataType<String> __LONGNVARCHAR;
   protected static final DataType<byte[]> __LONGVARBINARY;
   protected static final DataType<String> __LONGVARCHAR;
   protected static final DataType<String> __NCHAR;
   protected static final DataType<String> __NCLOB;
   protected static final DataType<String> __NVARCHAR;
   protected static final DataType<Byte> __TINYINT;
   protected static final DataType<byte[]> __VARBINARY;
   protected static final DataType<UByte> __TINYINTUNSIGNED;
   protected static final DataType<UShort> __SMALLINTUNSIGNED;
   protected static final DataType<UInteger> __INTEGERUNSIGNED;
   protected static final DataType<ULong> __BIGINTUNSIGNED;
   protected static final DataType<BigInteger> __BIGINTEGER;
   protected static final DataType<UUID> __UUID;

   static {
      SMALLINT = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.SMALLINT, "smallint");
      INTEGER = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.INTEGER, "integer");
      INT = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.INTEGER, "int");
      BIGINT = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.BIGINT, "bigint");
      INT64 = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.BIGINT, "int64");
      DOUBLEPRECISION = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.DOUBLE, "double precision");
      DOUBLE = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.DOUBLE, "double");
      D_FLOAT = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.DOUBLE, "d_float");
      FLOAT = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.REAL, "float");
      BOOLEAN = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.BOOLEAN, "boolean");
      DECIMAL = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.DECIMAL, "decimal");
      NUMERIC = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.NUMERIC, "numeric");
      VARCHAR = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.VARCHAR, "varchar", "varchar(4000)");
      CHARACTERVARYING = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.VARCHAR, "character varying", "varchar(4000)");
      CHAR = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.CHAR, "char");
      CHARACTER = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.CHAR, "character");
      CLOB = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.CLOB, "blob sub_type text");
      DATE = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.DATE, "date");
      TIME = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.TIME, "time");
      TIMESTAMP = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.TIMESTAMP, "timestamp");
      BLOB = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.BLOB, "blob");
      BIT = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.BIT, "bit");
      OTHER = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.OTHER, "other");
      INTERVALYEARTOMONTH = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.INTERVALYEARTOMONTH, "interval year to month");
      INTERVALDAYTOSECOND = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.INTERVALDAYTOSECOND, "interval day to second");
      __BINARY = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.BINARY, "blob");
      __FLOAT = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.FLOAT, "double precision");
      __LONGNVARCHAR = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.LONGNVARCHAR, "blob sub_type text");
      __LONGVARBINARY = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.LONGVARBINARY, "blob");
      __LONGVARCHAR = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.LONGVARCHAR, "varchar", "varchar(4000)");
      __NCHAR = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.NCHAR, "char");
      __NCLOB = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.NCLOB, "clob");
      __NVARCHAR = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.NVARCHAR, "varchar", "varchar(4000)");
      __TINYINT = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.TINYINT, "smallint");
      __VARBINARY = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.VARBINARY, "blob");
      __TINYINTUNSIGNED = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.TINYINTUNSIGNED, "smallint");
      __SMALLINTUNSIGNED = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.SMALLINTUNSIGNED, "int");
      __INTEGERUNSIGNED = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.INTEGERUNSIGNED, "bigint");
      __BIGINTUNSIGNED = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.BIGINTUNSIGNED, "decimal", "varchar(20)");
      __BIGINTEGER = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.DECIMAL_INTEGER, "decimal");
      __UUID = new DefaultDataType(SQLDialect.FIREBIRD, SQLDataType.UUID, "varchar", "varchar(36)");
   }
}
